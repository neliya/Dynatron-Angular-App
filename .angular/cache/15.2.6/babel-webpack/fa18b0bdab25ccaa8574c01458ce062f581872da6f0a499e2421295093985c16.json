{"ast":null,"code":"import { Customer } from 'src/app/models/customer.model';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/customer.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nexport class EditCustomerDialogComponent {\n  constructor(data, dialogRef, route, customerService, router, fb) {\n    this.data = data;\n    this.dialogRef = dialogRef;\n    this.route = route;\n    this.customerService = customerService;\n    this.router = router;\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.editCustomerFormGroup = this.fb.group({\n      id: [this.data.id],\n      firstName: [this.data?.firstName, Validators.required],\n      lastName: [this.data?.lastName, Validators.required],\n      email: [this.data?.email],\n      phone: [this.data?.phone]\n    });\n  }\n  getId() {\n    return this.editCustomerFormGroup?.get('id')?.value;\n  }\n  getFirstName() {\n    return this.editCustomerFormGroup?.get('firstName')?.value;\n  }\n  getLastName() {\n    return this.editCustomerFormGroup?.get('lastName')?.value;\n  }\n  getEmail() {\n    return this.editCustomerFormGroup?.get('email')?.value;\n  }\n  getPhone() {\n    return this.editCustomerFormGroup?.get('phone')?.value;\n  }\n  updateCustomer() {\n    sessionStorage.clear();\n    const customerDetails = new Customer();\n    customerDetails.id = this.getId();\n    customerDetails.firstName = this.getFirstName();\n    customerDetails.lastName = this.getLastName();\n    customerDetails.email = this.getEmail();\n    customerDetails.phone = this.getPhone();\n    sessionStorage.setItem('id', customerDetails.id);\n    sessionStorage.setItem('customerDetails', JSON.stringify(customerDetails));\n    this.customerService.updateCustomer(this.getId(), customerDetails).subscribe({\n      next: customer => {\n        this.dialogRef.close();\n      }\n    });\n  }\n}\nEditCustomerDialogComponent.ɵfac = function EditCustomerDialogComponent_Factory(t) {\n  return new (t || EditCustomerDialogComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.CustomerService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i4.FormBuilder));\n};\nEditCustomerDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditCustomerDialogComponent,\n  selectors: [[\"app-edit-customer-dialog\"]],\n  decls: 29,\n  vars: 1,\n  consts: [[1, \"container\", \"my-5\", \"customer-dialog\"], [1, \"row\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-fields\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"firstName\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"lastName\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"email\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"phone\"], [\"mat-button\", \"\", \"type\", \"submit\", 1, \"btn\", \"mr-5\"], [\"mat-button\", \"\", \"type\", \"button\", 3, \"mat-dialog-close\"]],\n  template: function EditCustomerDialogComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Edit Customer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function EditCustomerDialogComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.updateCustomer();\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"mat-form-field\", 4)(7, \"mat-label\");\n      i0.ɵɵtext(8, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 3)(11, \"mat-form-field\", 4)(12, \"mat-label\");\n      i0.ɵɵtext(13, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 3)(16, \"mat-form-field\", 4)(17, \"mat-label\");\n      i0.ɵɵtext(18, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 3)(21, \"mat-form-field\", 4)(22, \"mat-label\");\n      i0.ɵɵtext(23, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"button\", 9);\n      i0.ɵɵtext(26, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 10);\n      i0.ɵɵtext(28, \"Cancel\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.editCustomerFormGroup);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.MatFormField, i5.MatLabel, i6.MatInput, i1.MatDialogClose, i7.MatButton],\n  styles: [\".backdropBackground[_ngcontent-%COMP%] {\\n    background-color: #fff !important;\\n    -webkit-backdrop-filter: blur(4px);\\n            backdrop-filter: blur(4px);\\n    color: white !important;\\n  }\\n\\n  .mat-dialog-container.mat-mdc-dialog-container[_ngcontent-%COMP%] {\\n    background-color: #fff !important;\\n  }\\n\\n  .form-fields[_ngcontent-%COMP%]{\\n    width: 350px !important;\\n  }\\n\\n  .customer-dialog[_ngcontent-%COMP%]{\\n    color: transparent !important;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jdXN0b21lcnMvZWRpdC1jdXN0b21lci1kaWFsb2cvZWRpdC1jdXN0b21lci1kaWFsb2cuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlDQUFpQztJQUNqQyxrQ0FBMEI7WUFBMUIsMEJBQTBCO0lBQzFCLHVCQUF1QjtFQUN6Qjs7RUFFQTtJQUNFLGlDQUFpQztFQUNuQzs7RUFFQTtJQUNFLHVCQUF1QjtFQUN6Qjs7RUFFQTtJQUNFLDZCQUE2QjtFQUMvQiIsInNvdXJjZXNDb250ZW50IjpbIi5iYWNrZHJvcEJhY2tncm91bmQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmYgIWltcG9ydGFudDtcbiAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoNHB4KTtcbiAgICBjb2xvcjogd2hpdGUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC5tYXQtZGlhbG9nLWNvbnRhaW5lci5tYXQtbWRjLWRpYWxvZy1jb250YWluZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmYgIWltcG9ydGFudDtcbiAgfVxuXG4gIC5mb3JtLWZpZWxkc3tcbiAgICB3aWR0aDogMzUwcHggIWltcG9ydGFudDtcbiAgfVxuXG4gIC5jdXN0b21lci1kaWFsb2d7XG4gICAgY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["Customer","MAT_DIALOG_DATA","Validators","EditCustomerDialogComponent","constructor","data","dialogRef","route","customerService","router","fb","ngOnInit","editCustomerFormGroup","group","id","firstName","required","lastName","email","phone","getId","get","value","getFirstName","getLastName","getEmail","getPhone","updateCustomer","sessionStorage","clear","customerDetails","setItem","JSON","stringify","subscribe","next","customer","close","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/Neli/final-project/angular-app/src/app/components/customers/edit-customer-dialog/edit-customer-dialog.component.ts","/Users/Neli/final-project/angular-app/src/app/components/customers/edit-customer-dialog/edit-customer-dialog.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Customer } from 'src/app/models/customer.model';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { MatButton, MatButtonModule } from '@angular/material/button';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nexport interface EditCustomerDialogData{\n  id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n}\n\n@Component({\n  selector: 'app-edit-customer-dialog',\n  templateUrl: './edit-customer-dialog.component.html',\n  styleUrls: ['./edit-customer-dialog.component.css']\n})\nexport class EditCustomerDialogComponent {\n\n  editCustomerFormGroup!: FormGroup;\n  \n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: EditCustomerDialogData, \n    public dialogRef: MatDialogRef<EditCustomerDialogData>,\n    private route: ActivatedRoute, \n    private customerService: CustomerService, \n    private router: Router,\n    private fb: FormBuilder){\n\n  }\n\n  ngOnInit(): void{\n    this.editCustomerFormGroup = this.fb.group({\n      id: [this.data.id],\n      firstName: [this.data?.firstName, Validators.required],\n      lastName: [this.data?.lastName, Validators.required],\n      email: [this.data?.email],\n      phone: [this.data?.phone],\n    });\n  }\n\n  getId(): string{\n    return this.editCustomerFormGroup?.get('id')?.value;\n  }\n\n  getFirstName(): string{\n    return this.editCustomerFormGroup?.get('firstName')?.value;\n  }\n\n  getLastName(): string{\n    return this.editCustomerFormGroup?.get('lastName')?.value;\n  }\n\n  getEmail(): string{\n    return this.editCustomerFormGroup?.get('email')?.value;\n  }\n  getPhone(): string{\n    return this.editCustomerFormGroup?.get('phone')?.value;\n  }\n\n  updateCustomer(){\n    sessionStorage.clear();  \n\n    const customerDetails = new Customer();\n    customerDetails.id = this.getId();\n    customerDetails.firstName = this.getFirstName();\n    customerDetails.lastName = this.getLastName();\n    customerDetails.email = this.getEmail();\n    customerDetails.phone = this.getPhone();\n\n    sessionStorage.setItem('id', customerDetails.id);   \n    sessionStorage.setItem('customerDetails', JSON.stringify(customerDetails)); \n\n    this.customerService.updateCustomer(this.getId(), customerDetails).subscribe({\n      next: (customer) => {\n        this.dialogRef.close();\n      }\n    });\n\n   \n  }\n}\n","<div class=\"container my-5 customer-dialog\">\n    <h1>Edit Customer</h1>\n    <div class=\"row\">\n        <form [formGroup]=\"editCustomerFormGroup\" (ngSubmit)=\"updateCustomer()\">\n            <div class=\"mb-3\">\n                <mat-form-field class=\"form-fields\">\n                    <mat-label>First Name</mat-label>\n                    <input matInput type=\"text\" formControlName=\"firstName\">\n                </mat-form-field>\n            </div>\n\n            <div class=\"mb-3\">\n                <mat-form-field class=\"form-fields\"> \n                    <mat-label>Last Name</mat-label>\n                    <input matInput type=\"text\" formControlName=\"lastName\">\n                </mat-form-field>\n            </div>\n\n            <div class=\"mb-3\">\n                <mat-form-field class=\"form-fields\">\n                    <mat-label>Email</mat-label>\n                    <input matInput type=\"text\" formControlName=\"email\">\n                </mat-form-field>\n            </div>\n            <div class=\"mb-3\">\n                <mat-form-field class=\"form-fields\">\n                    <mat-label>Phone</mat-label>\n                    <input matInput type=\"text\" formControlName=\"phone\">\n                </mat-form-field>\n            </div>\n\n            <button mat-button type=\"submit\" class=\"btn mr-5\">Save</button>\n            <button mat-button [mat-dialog-close] type=\"button\">Cancel</button>\n\n        </form>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}